# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-04-08 01:38
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import park_benches.base
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BenchA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Bench (numeric id)',
                'verbose_name_plural': 'Benches (numeric id)',
            },
        ),
        migrations.CreateModel(
            name='BenchB',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.FloatField(blank=True, help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Bench (uuid)',
                'verbose_name_plural': 'Benches (uuid)',
            },
        ),
        migrations.CreateModel(
            name='BenchC',
            fields=[
                ('id', models.CharField(db_index=True, default=park_benches.base.get_new_id, max_length=12, primary_key=True, serialize=False, verbose_name='ID')),
                ('latitude', models.FloatField(blank=True, help_text='Latitude (Lat.) is the angle between any point and the equator (north pole is at 90; south pole is at -90).', null=True, verbose_name='Latitude')),
                ('longitude', models.FloatField(blank=True, help_text='Longitude (Long.) is the angle east or west of an arbitrary point on Earth from Greenwich (UK), which is the international zero-longitude point (longitude=0 degrees). The anti-meridian of Greenwich is both 180 (direction to east) and -180 (direction to west).', null=True, verbose_name='Longitude')),
            ],
            options={
                'verbose_name': 'Bench (random varchar id)',
                'verbose_name_plural': 'Benches (random varchar id)',
            },
        ),
        migrations.CreateModel(
            name='ParkA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Park (numeric id)',
                'verbose_name_plural': 'Parks (numeric id)',
            },
        ),
        migrations.CreateModel(
            name='ParkB',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Park (uuid)',
                'verbose_name_plural': 'Parks (uuid)',
            },
        ),
        migrations.CreateModel(
            name='ParkC',
            fields=[
                ('id', models.CharField(db_index=True, default=park_benches.base.get_new_id, max_length=12, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'Park (random varchar id)',
                'verbose_name_plural': 'Parks (random varchar id)',
            },
        ),
        migrations.AddField(
            model_name='benchc',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='park_benches.ParkC'),
        ),
        migrations.AddField(
            model_name='benchb',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='park_benches.ParkB'),
        ),
        migrations.AddField(
            model_name='bencha',
            name='park',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='park_benches.ParkA'),
        ),
    ]
